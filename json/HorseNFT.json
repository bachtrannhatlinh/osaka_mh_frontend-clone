{
  "network": "spectre_testnet",
  "contract": {
    "name": "HorseNFT",
    "address": "0x263b279f5c6A4553d543600D228DD814146e9E74",
    "abi": [
      "constructor()",
      "event AddNewToken(uint256 indexed tokenId, address indexed owner)",
      "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
      "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
      "event MintSign(address indexed owner, address indexed caller, address indexed signer, string none)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event RemoveToken(uint256 indexed tokenId, address indexed caller)",
      "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
      "event Unpaused(address account)",
      "function addOperator(address operator)",
      "function approve(address to, uint256 tokenId)",
      "function balanceOf(address owner) view returns (uint256)",
      "function baseTokenURI() view returns (string)",
      "function burn(uint256 tokenId)",
      "function getApproved(uint256 tokenId) view returns (address)",
      "function getTokenMetadata(uint256 tokenId) view returns (tuple(uint256 id, string metaUrl))",
      "function isApprovedForAll(address owner, address operator) view returns (bool)",
      "function isExists(uint256 tokenId) view returns (bool)",
      "function maxMinSize() view returns (uint256)",
      "function mint(address to, uint256 tokenId, string metaUrl)",
      "function mintCompleted(bytes32) view returns (bool)",
      "function mintCountOf(address) view returns (uint256)",
      "function mintData(string) view returns (address owner, uint256 blockExpired, string none, uint8 v, bytes32 r, bytes32 s)",
      "function mintNoneOf(address, uint256) view returns (string)",
      "function mintQuantityOf(address) view returns (uint256)",
      "function mintSign(tuple(address owner, uint256 blockExpired, uint256[] ids, string[] metaUrls, string none, uint8 v, bytes32 r, bytes32 s) data)",
      "function multiMint(address to, uint256[] ids, string[] metaUrls)",
      "function multiTransfer(address to, uint256[] ids)",
      "function name() view returns (string)",
      "function operators(address) view returns (bool)",
      "function owner() view returns (address)",
      "function ownerOf(uint256 tokenId) view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function removeOperator(address operator)",
      "function renounceOwnership()",
      "function safeTransferFrom(address from, address to, uint256 tokenId)",
      "function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data)",
      "function setApprovalForAll(address operator, bool approved)",
      "function setBaseURI(string baseURI)",
      "function setMaxMinSize(uint256 max)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function symbol() view returns (string)",
      "function tokenByIndex(uint256 index) view returns (uint256)",
      "function tokenIdOfMetaUrl(string metaUrl) view returns (uint256)",
      "function tokenOfOwnerByIndex(address owner, uint256 index) view returns (uint256)",
      "function tokenURI(uint256 tokenId) view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transferFrom(address from, address to, uint256 tokenId)",
      "function transferOwnership(address newOwner)",
      "function unpause()",
      "function updateMetaUrl(uint256 tokenId, string metaUrl)"
    ]
  }
}